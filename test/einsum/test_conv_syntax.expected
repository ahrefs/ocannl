
Welcome to OCANNL! Reading configuration defaults from /Users/lukstafi/ocannl/_build/default/test/einsum/ocannl_config.
Retrieving commandline, environment, or config file variable ocannl_log_level
Found 0, in the config file
Testing conv syntax parsing...
Test 1: Parsed '2*o+3*k' successfully
  Structure: ((bcast_batch ()) (bcast_input ()) (bcast_output ()) (given_batch 0)
 (given_input 0) (given_output 1) (given_beg_batch 0) (given_beg_input 0)
 (given_beg_output 0)
 (labels
  ((((in_axes Output) (pos 1) (from_end true))
    (Conv_spec (stride 2) (output_label o) (dilation 3) (kernel_label k))))))

Test 2: Parsed 'o+k' successfully
  Structure: ((bcast_batch ()) (bcast_input ()) (bcast_output ()) (given_batch 0)
 (given_input 0) (given_output 1) (given_beg_batch 0) (given_beg_input 0)
 (given_beg_output 0)
 (labels
  ((((in_axes Output) (pos 1) (from_end true))
    (Conv_spec (stride 1) (output_label o) (dilation 1) (kernel_label k))))))

Test 3: Parsed 'a,2*b+c' successfully
  Structure: ((bcast_batch ()) (bcast_input ()) (bcast_output ()) (given_batch 0)
 (given_input 0) (given_output 2) (given_beg_batch 0) (given_beg_input 0)
 (given_beg_output 0)
 (labels
  ((((in_axes Output) (pos 1) (from_end true))
    (Conv_spec (stride 2) (output_label b) (dilation 1) (kernel_label c)))
   (((in_axes Output) (pos 2) (from_end true)) (Label a)))))

Test 4: Parsed 'io+kj' successfully (single-char mode)
  Structure: ((bcast_batch ()) (bcast_input ()) (bcast_output ()) (given_batch 0)
 (given_input 0) (given_output 3) (given_beg_batch 0) (given_beg_input 0)
 (given_beg_output 0)
 (labels
  ((((in_axes Output) (pos 1) (from_end true)) (Label j))
   (((in_axes Output) (pos 2) (from_end true))
    (Conv_spec (stride 1) (output_label o) (dilation 1) (kernel_label k)))
   (((in_axes Output) (pos 3) (from_end true)) (Label i)))))

Test 5: Parsed 'a+bc' successfully (single-char mode)
  Structure: ((bcast_batch ()) (bcast_input ()) (bcast_output ()) (given_batch 0)
 (given_input 0) (given_output 2) (given_beg_batch 0) (given_beg_input 0)
 (given_beg_output 0)
 (labels
  ((((in_axes Output) (pos 1) (from_end true)) (Label c))
   (((in_axes Output) (pos 2) (from_end true))
    (Conv_spec (stride 1) (output_label a) (dilation 1) (kernel_label b))))))

Test 6: Parsed 'i,j->2*i+j' successfully
  Structure: ((bcast_batch ()) (bcast_input ()) (bcast_output ()) (given_batch 0)
 (given_input 2) (given_output 1) (given_beg_batch 0) (given_beg_input 0)
 (given_beg_output 0)
 (labels
  ((((in_axes Output) (pos 1) (from_end true))
    (Conv_spec (stride 2) (output_label i) (dilation 1) (kernel_label j)))
   (((in_axes Input) (pos 1) (from_end true)) (Label j))
   (((in_axes Input) (pos 2) (from_end true)) (Label i)))))

Test 7: Parsed 'batch|input->3*output+1*kernel,' successfully
  Structure: ((bcast_batch ()) (bcast_input ()) (bcast_output ()) (given_batch 1)
 (given_input 1) (given_output 1) (given_beg_batch 0) (given_beg_input 0)
 (given_beg_output 0)
 (labels
  ((((in_axes Batch) (pos 1) (from_end true)) (Label batch))
   (((in_axes Output) (pos 1) (from_end true))
    (Conv_spec (stride 3) (output_label output) (dilation 1)
     (kernel_label kernel)))
   (((in_axes Input) (pos 1) (from_end true)) (Label input)))))

All conv syntax parsing tests passed!

Testing multichar mode detection...
✓ Multichar spec 'a,b' parsed correctly
✓ Multichar spec '2*o+k' parsed correctly
✓ Multichar spec 'o+k' parsed correctly
✓ Multichar spec 'a,2*b+c' parsed correctly
✓ Single-char spec 'abc' parsed correctly
✓ Single-char spec 'ijk' parsed correctly
✓ Single-char spec 'i->j' parsed correctly
✓ Single-char spec 'io+kj' parsed correctly
✓ Single-char spec 'a+bc' parsed correctly
✓ Single-char spec '...|ij' parsed correctly
✓ Single-char spec 'j...' parsed correctly
✓ Single-char spec '...|j...->i' parsed correctly
✓ Single-char spec '...|i->1' parsed correctly

Testing single-char conv equivalence...
Single-char 'a+b': ((bcast_batch ()) (bcast_input ()) (bcast_output ()) (given_batch 0)
 (given_input 0) (given_output 1) (given_beg_batch 0) (given_beg_input 0)
 (given_beg_output 0)
 (labels
  ((((in_axes Output) (pos 1) (from_end true))
    (Conv_spec (stride 1) (output_label a) (dilation 1) (kernel_label b))))))
Multi-char 'a+b': ((bcast_batch ()) (bcast_input ()) (bcast_output ()) (given_batch 0)
 (given_input 0) (given_output 1) (given_beg_batch 0) (given_beg_input 0)
 (given_beg_output 0)
 (labels
  ((((in_axes Output) (pos 1) (from_end true))
    (Conv_spec (stride 1) (output_label a) (dilation 1) (kernel_label b))))))
Note: Both should produce the same Conv_spec structure

All conv syntax tests completed!
